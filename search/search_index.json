{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Monalect About Monalect is a personal learning management system meant to allow a user to create and organize their own course to go through, as well as share. Thus allowing other users to be able to go through courses without needing to create their own. The idea is the use can upload their own learning materials by way of pdfs, and link material like lectures, and then the app itself will incorporate it into a place they can learn. That is the basic idea. The vision is that it will eventually lead to a social network where people can study and learn with others. Deadline The deadline for this project is May 31st. That leaves from now (April 26) about 35 days. More than enough if I spend them wisely. That's why this website is here. This documentation will serve as a journal, road-map, feature plan, and project requirement document to facilitate its efficient creation.","title":"Monalect"},{"location":"#monalect","text":"","title":"Monalect"},{"location":"#about","text":"Monalect is a personal learning management system meant to allow a user to create and organize their own course to go through, as well as share. Thus allowing other users to be able to go through courses without needing to create their own. The idea is the use can upload their own learning materials by way of pdfs, and link material like lectures, and then the app itself will incorporate it into a place they can learn. That is the basic idea. The vision is that it will eventually lead to a social network where people can study and learn with others.","title":"About"},{"location":"#deadline","text":"The deadline for this project is May 31st. That leaves from now (April 26) about 35 days. More than enough if I spend them wisely. That's why this website is here. This documentation will serve as a journal, road-map, feature plan, and project requirement document to facilitate its efficient creation.","title":"Deadline"},{"location":"journal/","text":"","title":"Index"},{"location":"journal/2022/april/","text":"April 26 Time Worked: 6 hours April 27 [6:53am] The first day I'm writing here. I have another dev journal, but I'll start anew here. Last night, I quickly setup the new design for the landing page that's a step better than before. Today I'll set things up to use in Next.js. I set it up enough that I had a complete system, but I'll want to revisit the styling. I used Next's module css system, but found that they want you to use their own classing system. I thought it would be better to develop it seperately in Sass, and just globally import what's necessary, which should be almost all of it. The new design uses a fun color scheme. I'll want to play around with it later to create more components. I noticed an issue with some of the button colors, so I'll want to expand my color palette a bit. I'm using a gradient scheme, but it clashes with semantic colors as the opposite side of the gradient is a maroon red, which means it can't really be used for button color. Anyways, I'll figure it out. I'll just probably switch up the gradient with an academic gold. For now, I'll quickly write up the landing page, which shouldn't take much time and \"setup\", the only 3 components I see are the header, text-input, and button, with the latter two being omitted in the final product until I can setup an API to take in the email. Anywho, for today, I'll have the landing done, then create the design for the blog which should take me the rest of the day, realistically. By the end I'll want to then organize my documentation here a little bit and have it out there. I have a dentist's appointment. Hopefully it won't take too much time. It should just be a checkup, and I'll be back to work. Time Worked: 6.5 hours April 28 [1:03pm] Looking back, I'm unhappy with my hours yesterday. I woke up early, and I should've been able to work for most of the day. I'll make up for it today. I'm currently working on implementing the blog. I just wanted to add some things here to put on the blog later on. Fix loading jank (mostly caused by waiting for the css to load in google fonts, which after it's cached it doesn't become a problem, but I want to at least make the initial load clean) [3:04pm] The blog is going to take some time, but I figured out how to set it up. The real problem so far is the mess that this is becoming. I'll really need to take a moment and break this website down when I eventually have to. For now, just finish it. Time Worked: 7.5 hours April 29 [7:13am] I'm still surprised I only worked seven and a half hours yesterday. It felt much longer. I blame the fact that I forget to turn the timer on and still work. But, I finished the blog finally. I'll have to rewrite my first post, as it's something I rambled together quickly to just have up there when I make it live for the first time. A few things to remember for later: Add social media support personal social media (of author >.>) share with others Make all pages responsive Make the blog header a link with a hover style Today I'm just going to be refactoring and reorganizing code. I made a mess creating the website last night, I just want to have it cleaned. Then I'll create the designs for the \"Plans\" and \"About Me\" section, which shouldn't take too long. I'll think of how to reorganize it here because it's a bit of a confusion. So I can split it up into two things to organize: Style, and code. The SASS styling can be split up further into page styles, and then component styles. Page styles will be imported into the main, global sass file. I'll want to break up the page into various components then, and show that through code. Then I'll go through their styles. There are some things that are tricky. The header, for example, highlights depending on what's the current active link or path. If a turn it into a component, I need some way to check. I think I can do it easily enough however by simply making it a prop that tells the link what path is active, and then subsequently adds an active class to the active link. I'll also want to create a better design system. So far, only the colors are really part of the \"system\", and perhaps some components. But I can make it better. One of the things is whether I use a tagging system like .mn--post-card.mn--small or just .mn--post-card-small for the component class. Some research is necessary. I'll look into Sass styling architectures. [7:57am] Whenever I do Sass styling, I don't do any form of nesting. Perhaps I should. [10:11am] Okay, I've cleaned a bit . Not enough, but enough that I can work on the next two pages without feeling messy. After finishing the surface-site (I'm calling it that, I can't figure out a name), I'll go on to create the design system a little more thoroughly. But now, I got to return to the documentation and finishing up my user stories. I'll put this page up using github pages instead of cloudflare's pages.","title":"April"},{"location":"journal/2022/april/#april-26","text":"Time Worked: 6 hours","title":"April 26"},{"location":"journal/2022/april/#april-27","text":"[6:53am] The first day I'm writing here. I have another dev journal, but I'll start anew here. Last night, I quickly setup the new design for the landing page that's a step better than before. Today I'll set things up to use in Next.js. I set it up enough that I had a complete system, but I'll want to revisit the styling. I used Next's module css system, but found that they want you to use their own classing system. I thought it would be better to develop it seperately in Sass, and just globally import what's necessary, which should be almost all of it. The new design uses a fun color scheme. I'll want to play around with it later to create more components. I noticed an issue with some of the button colors, so I'll want to expand my color palette a bit. I'm using a gradient scheme, but it clashes with semantic colors as the opposite side of the gradient is a maroon red, which means it can't really be used for button color. Anyways, I'll figure it out. I'll just probably switch up the gradient with an academic gold. For now, I'll quickly write up the landing page, which shouldn't take much time and \"setup\", the only 3 components I see are the header, text-input, and button, with the latter two being omitted in the final product until I can setup an API to take in the email. Anywho, for today, I'll have the landing done, then create the design for the blog which should take me the rest of the day, realistically. By the end I'll want to then organize my documentation here a little bit and have it out there. I have a dentist's appointment. Hopefully it won't take too much time. It should just be a checkup, and I'll be back to work. Time Worked: 6.5 hours","title":"April 27"},{"location":"journal/2022/april/#april-28","text":"[1:03pm] Looking back, I'm unhappy with my hours yesterday. I woke up early, and I should've been able to work for most of the day. I'll make up for it today. I'm currently working on implementing the blog. I just wanted to add some things here to put on the blog later on. Fix loading jank (mostly caused by waiting for the css to load in google fonts, which after it's cached it doesn't become a problem, but I want to at least make the initial load clean) [3:04pm] The blog is going to take some time, but I figured out how to set it up. The real problem so far is the mess that this is becoming. I'll really need to take a moment and break this website down when I eventually have to. For now, just finish it. Time Worked: 7.5 hours","title":"April 28"},{"location":"journal/2022/april/#april-29","text":"[7:13am] I'm still surprised I only worked seven and a half hours yesterday. It felt much longer. I blame the fact that I forget to turn the timer on and still work. But, I finished the blog finally. I'll have to rewrite my first post, as it's something I rambled together quickly to just have up there when I make it live for the first time. A few things to remember for later: Add social media support personal social media (of author >.>) share with others Make all pages responsive Make the blog header a link with a hover style Today I'm just going to be refactoring and reorganizing code. I made a mess creating the website last night, I just want to have it cleaned. Then I'll create the designs for the \"Plans\" and \"About Me\" section, which shouldn't take too long. I'll think of how to reorganize it here because it's a bit of a confusion. So I can split it up into two things to organize: Style, and code. The SASS styling can be split up further into page styles, and then component styles. Page styles will be imported into the main, global sass file. I'll want to break up the page into various components then, and show that through code. Then I'll go through their styles. There are some things that are tricky. The header, for example, highlights depending on what's the current active link or path. If a turn it into a component, I need some way to check. I think I can do it easily enough however by simply making it a prop that tells the link what path is active, and then subsequently adds an active class to the active link. I'll also want to create a better design system. So far, only the colors are really part of the \"system\", and perhaps some components. But I can make it better. One of the things is whether I use a tagging system like .mn--post-card.mn--small or just .mn--post-card-small for the component class. Some research is necessary. I'll look into Sass styling architectures. [7:57am] Whenever I do Sass styling, I don't do any form of nesting. Perhaps I should. [10:11am] Okay, I've cleaned a bit . Not enough, but enough that I can work on the next two pages without feeling messy. After finishing the surface-site (I'm calling it that, I can't figure out a name), I'll go on to create the design system a little more thoroughly. But now, I got to return to the documentation and finishing up my user stories. I'll put this page up using github pages instead of cloudflare's pages.","title":"April 29"},{"location":"stories/","text":"MVP Stories Epic: Founder To-Dos I don't know what to name this, but this is the first thing I'm creating so that I can establish the workflow. Documentation can be saved for later, when I actually built it, but the blog, plans, and about need to be handled. The landing page is the [o] Pre-Launch Landing Page [O] Design & Marketing [O] Content [o] Keyword List for SEO [O] Text Eye grabber(first things users read, reel 'em in) Headline Supporting Copy Small Article (more in-depth overview of the course) Headline Product Description Planned Features Initial Blogpost [-] Media [-] Video [-] Mascot Images [-] Wizard Studying [-] Wizard from SICP [-] Statistics & Graphs Figma Prototype Logo Title [-] ~~Login Form~~ [-] Username/Email [-] Password [-] Reset Password [-] Sign-up Link [-] Blog's Latest Posts Email Subscription Form Feature suggestions Encourage Sharing Our Social Media Links Footer [o] Frontend Implementation [-] ~~Read through Sass tutorial~~ [-] ~~Setup webpack~~ Setup Next [o] Finish landing page HTML Meta tags Body (S)CSS Javascript Send feature suggestion Send social media links Social Media Links Twitter Youtube Github [.] Production & Backend Static generation Deployment script Blog Design Figma Prototype Frontend Implementation [-] Documentation Plans (Public to-do list) Design Figma Prototype Frontend Implementation HTML generation Javascript + CSS About Design Figma Prototype Frontend Implementation HTML generation Javascript + CSS Hosting MOBILE FRIENDLY AND RESPONSIVE Account Management (organize all my personal accounts) I might use a static site generator for this Marketing Personal CRM Management Setup Epic: User Creation & Management User Creation & Management As a user I should be able to access a form to which I can sign up. As a user I should be able to confirm my email address As a user I should still be able to access my account without confirming my email address As a user I should be able to automatically login once I register As a user I should be able to login Epic: Course Management Course Management As a user I should be able to define the title As a user I should be able to define the description As a user I should be able to manage my questions As a user I should be able to import questions. As a user I want to attach questions to specific lessons As a user I want to be able to remove questions from the list if it doesn't belong As a user I should be able to manage my lessons As a user I should be able to define lesson materials As a user I want to namelessons As a user I want to attach course materials to lessons. As a user I should be able to define the order of my lesssons. As a user I should be able to manage my course materials As a user I should be able to define a textbook as a course material As a user I should be able to define the sections of a textbook As a user I should be able to attach sections to a lesson As a user I should be able to define the metadata of the textbook As a user I should be able to define an article as a course material As a user I should be able to attach an article to a lesson As a user I should be able to upload an article as a user I should be able to save my course as a draft as a user I should be able to import a course template and modify it to my liking as a user I should be able to export my course after creating them as a user I should be able to access premade courses so I don't even have to think about creation Epic: Course Completion The actual act of going through a course and studying it. The meat of the program. Course Completion Notebook As a user I want to be able to format my notebook. As a user I want to be able to access my textbook while writing notes. As a user I want to create questions while writing notes. As a user I should be able to see how much words I've written. As a user I should be able to see progress towards certain goals. Text Reader As a user I should be able to read my learning materials As a user I should be able to see what lesson I'm on when reading a textbook or article As a user I should be able to jump to pages at the start of each lesson As a user I should be able to access my notebook while reading As a user I should be able to create a question while reading As a user I should be able to access the last textbook I opened when I open it again As a user I should be able to redownload my textbook As a user I should be able to highlight my texts (last priority) Questions As a user I should be able to reassign my questions As a user I should be able to CRUD operations on a question As a user, answers should be hidden from me so I don't spoil myself everytime I want to edit questions As a user I should be able to create a test for these questions. As a user I should be able to export my questions As a user I should be able to review my questions Goals As a user I should be able to CRUD goals As a user I should be able to automatically receive goals after they've completed As a user I should be able to see my goals as I progress through them on other pages As a user I should see a list of my previous completed goals/accomplishments Quizzes & Exams As a user I should be able to quiz myself against questions without worry. As a user I should be able to see if I got it wrong right after I answer As a user I should be able to examinate myself against questions to formally measure my knowledge. As a user I should also be able to do practice exams to see my level without recording my mark As a user I shouldn't feel discouraged as I go through these questions that I quit before finishing it As a user I should be able to choose the number of questions from each lesson I test against Completion As a user I want to be able to review completed courses As a user I want to see how long since I reviewed it so I can restudy it when necessary As a user I want to be able to \"uncomplete\" a course and access it Epic: Marketing Marketing isn't a huge focus for Monalect in the beginning, but having a (free) way to publish to various networks and Preliminaries As a marketer, frontend metadata of various pages should allow for easy discovery SEO terms Value and content creation As a marketer, I'd like trivial tools made to attract users As a marketer, I'd like checklists people can use to become attracted to our website As a marketer, I'd like videos made that showcase our philosophy and product As a marketer, I'd like weekly blogposts to be easily written, as they provide value and authority to the website As a marketer, I'd like the ability to publish blog post at specific time As a marketer, whenever a blog post is created, I'd like to have it put out to various mediums (pun intended) As a marketer, I'd like blog posting to be fairly streamlined","title":"MVP Stories"},{"location":"stories/#mvp-stories","text":"","title":"MVP Stories"},{"location":"stories/#epic-founder-to-dos","text":"I don't know what to name this, but this is the first thing I'm creating so that I can establish the workflow. Documentation can be saved for later, when I actually built it, but the blog, plans, and about need to be handled. The landing page is the [o] Pre-Launch Landing Page [O] Design & Marketing [O] Content [o] Keyword List for SEO [O] Text Eye grabber(first things users read, reel 'em in) Headline Supporting Copy Small Article (more in-depth overview of the course) Headline Product Description Planned Features Initial Blogpost [-] Media [-] Video [-] Mascot Images [-] Wizard Studying [-] Wizard from SICP [-] Statistics & Graphs Figma Prototype Logo Title [-] ~~Login Form~~ [-] Username/Email [-] Password [-] Reset Password [-] Sign-up Link [-] Blog's Latest Posts Email Subscription Form Feature suggestions Encourage Sharing Our Social Media Links Footer [o] Frontend Implementation [-] ~~Read through Sass tutorial~~ [-] ~~Setup webpack~~ Setup Next [o] Finish landing page HTML Meta tags Body (S)CSS Javascript Send feature suggestion Send social media links Social Media Links Twitter Youtube Github [.] Production & Backend Static generation Deployment script Blog Design Figma Prototype Frontend Implementation [-] Documentation Plans (Public to-do list) Design Figma Prototype Frontend Implementation HTML generation Javascript + CSS About Design Figma Prototype Frontend Implementation HTML generation Javascript + CSS Hosting MOBILE FRIENDLY AND RESPONSIVE Account Management (organize all my personal accounts) I might use a static site generator for this Marketing Personal CRM Management Setup","title":"Epic: Founder To-Dos"},{"location":"stories/#epic-user-creation-management","text":"User Creation & Management As a user I should be able to access a form to which I can sign up. As a user I should be able to confirm my email address As a user I should still be able to access my account without confirming my email address As a user I should be able to automatically login once I register As a user I should be able to login","title":"Epic: User Creation &amp; Management"},{"location":"stories/#epic-course-management","text":"Course Management As a user I should be able to define the title As a user I should be able to define the description As a user I should be able to manage my questions As a user I should be able to import questions. As a user I want to attach questions to specific lessons As a user I want to be able to remove questions from the list if it doesn't belong As a user I should be able to manage my lessons As a user I should be able to define lesson materials As a user I want to namelessons As a user I want to attach course materials to lessons. As a user I should be able to define the order of my lesssons. As a user I should be able to manage my course materials As a user I should be able to define a textbook as a course material As a user I should be able to define the sections of a textbook As a user I should be able to attach sections to a lesson As a user I should be able to define the metadata of the textbook As a user I should be able to define an article as a course material As a user I should be able to attach an article to a lesson As a user I should be able to upload an article as a user I should be able to save my course as a draft as a user I should be able to import a course template and modify it to my liking as a user I should be able to export my course after creating them as a user I should be able to access premade courses so I don't even have to think about creation","title":"Epic: Course Management"},{"location":"stories/#epic-course-completion","text":"The actual act of going through a course and studying it. The meat of the program. Course Completion Notebook As a user I want to be able to format my notebook. As a user I want to be able to access my textbook while writing notes. As a user I want to create questions while writing notes. As a user I should be able to see how much words I've written. As a user I should be able to see progress towards certain goals. Text Reader As a user I should be able to read my learning materials As a user I should be able to see what lesson I'm on when reading a textbook or article As a user I should be able to jump to pages at the start of each lesson As a user I should be able to access my notebook while reading As a user I should be able to create a question while reading As a user I should be able to access the last textbook I opened when I open it again As a user I should be able to redownload my textbook As a user I should be able to highlight my texts (last priority) Questions As a user I should be able to reassign my questions As a user I should be able to CRUD operations on a question As a user, answers should be hidden from me so I don't spoil myself everytime I want to edit questions As a user I should be able to create a test for these questions. As a user I should be able to export my questions As a user I should be able to review my questions Goals As a user I should be able to CRUD goals As a user I should be able to automatically receive goals after they've completed As a user I should be able to see my goals as I progress through them on other pages As a user I should see a list of my previous completed goals/accomplishments Quizzes & Exams As a user I should be able to quiz myself against questions without worry. As a user I should be able to see if I got it wrong right after I answer As a user I should be able to examinate myself against questions to formally measure my knowledge. As a user I should also be able to do practice exams to see my level without recording my mark As a user I shouldn't feel discouraged as I go through these questions that I quit before finishing it As a user I should be able to choose the number of questions from each lesson I test against Completion As a user I want to be able to review completed courses As a user I want to see how long since I reviewed it so I can restudy it when necessary As a user I want to be able to \"uncomplete\" a course and access it","title":"Epic: Course Completion"},{"location":"stories/#epic-marketing","text":"Marketing isn't a huge focus for Monalect in the beginning, but having a (free) way to publish to various networks and Preliminaries As a marketer, frontend metadata of various pages should allow for easy discovery SEO terms Value and content creation As a marketer, I'd like trivial tools made to attract users As a marketer, I'd like checklists people can use to become attracted to our website As a marketer, I'd like videos made that showcase our philosophy and product As a marketer, I'd like weekly blogposts to be easily written, as they provide value and authority to the website As a marketer, I'd like the ability to publish blog post at specific time As a marketer, whenever a blog post is created, I'd like to have it put out to various mediums (pun intended) As a marketer, I'd like blog posting to be fairly streamlined","title":"Epic: Marketing"},{"location":"stories/marketing/","text":"Marketing Stories Epic: Pre-MVP Setup As a marketer we should have a keyword SEO sheet for use in our marketing content As a marketer, I'd like a pre-launch landing page to make users aware of our product. As a marketer, the page should allow users to be notified when our products launch As a marketer, we should be able to receive suggestions from prospective users about what they'd like on our product. As a marketer, our design should show we're serious about this product. As a marketer, the content here should use SEO keywords from our list. As a marketer I'd like a blog to create value so users can come check us out As a marketer, there should be an easy way for me to write blog posts or articles and put them up. As a marketer, I'd like a page to show users of our planned features, and what we've completed so far. As a marketer I'd like a page that shows our contact information so people can reach us if they so wish to.","title":"Marketing Stories"},{"location":"stories/marketing/#marketing-stories","text":"","title":"Marketing Stories"},{"location":"stories/marketing/#epic-pre-mvp-setup","text":"As a marketer we should have a keyword SEO sheet for use in our marketing content As a marketer, I'd like a pre-launch landing page to make users aware of our product. As a marketer, the page should allow users to be notified when our products launch As a marketer, we should be able to receive suggestions from prospective users about what they'd like on our product. As a marketer, our design should show we're serious about this product. As a marketer, the content here should use SEO keywords from our list. As a marketer I'd like a blog to create value so users can come check us out As a marketer, there should be an easy way for me to write blog posts or articles and put them up. As a marketer, I'd like a page to show users of our planned features, and what we've completed so far. As a marketer I'd like a page that shows our contact information so people can reach us if they so wish to.","title":"Epic: Pre-MVP Setup"},{"location":"stories/stories/marketing/blog/","text":"Blog Posts To count this as done, just make sure it's done once a week. Best date to publish is Tuesday, at 9am. Should be able to be published automatically. Ideas Study Maps (Infographics) much like 4chan study guides use MITOCW's prerequisite structures and course readings to create these maps, so I don't look like a dumbass titled \"how to study x\"? Research information the fallibility of individual man","title":"Blog"},{"location":"stories/stories/marketing/blog/#blog-posts","text":"To count this as done, just make sure it's done once a week. Best date to publish is Tuesday, at 9am. Should be able to be published automatically.","title":"Blog Posts"},{"location":"stories/stories/marketing/blog/#ideas","text":"Study Maps (Infographics) much like 4chan study guides use MITOCW's prerequisite structures and course readings to create these maps, so I don't look like a dumbass titled \"how to study x\"? Research information the fallibility of individual man","title":"Ideas"},{"location":"stories/stories/other/landing_article/","text":"Landing Page Article Header: You can create, manage, and share your own courses, but more importantly, you can study them! There is a plethora of learning resources and learning materials online-- more than enough for the autodidact to study, so without sacrificing the freedom you have when studying personal learning materials, we provide you with multiple tools to study and measure your progress under a cohesive learning environment. Study without feeling like you're scattered, or lost.","title":"Landing article"},{"location":"stories/stories/other/landing_article/#landing-page-article","text":"Header: You can create, manage, and share your own courses, but more importantly, you can study them! There is a plethora of learning resources and learning materials online-- more than enough for the autodidact to study, so without sacrificing the freedom you have when studying personal learning materials, we provide you with multiple tools to study and measure your progress under a cohesive learning environment. Study without feeling like you're scattered, or lost.","title":"Landing Page Article"},{"location":"stories/stories/other/landing_features/","text":"Create courses quickly and effortlessly. Upload your own pdf files to use with our text reader, then write notes while you read. Create questions and then test yourself later to see whether you're ready to move on. Practice and review your previous courses to keep your knowledge fresh. Not enough time to create? You can use one of our own templates. Questions are included, and the textbooks are free! Do you have any of your own features in mind? Give us a suggestion! [show text input to send suggestions]","title":"Landing features"},{"location":"stories/stories/other/landing_headline/","text":"Headline: Tired of other people's courses? Create your own. <- SELECTED Your Course. Your Education. Your Mind. Manage your own learning, for free. Body: Self study math, psychology, philosophy, programming... [use an animation to roll through different choices] for free with our app. Upload learning materials, organize your lessons, and then we take care of the rest. All you have to do is study.","title":"Landing headline"},{"location":"stories/stories/other/landing_headline/#headline","text":"Tired of other people's courses? Create your own. <- SELECTED Your Course. Your Education. Your Mind. Manage your own learning, for free. Body: Self study math, psychology, philosophy, programming... [use an animation to roll through different choices] for free with our app. Upload learning materials, organize your lessons, and then we take care of the rest. All you have to do is study.","title":"Headline:"},{"location":"stories/stories/other/landing_html/","text":"HTML generation Okay, so because this is the first implementation, I have to figure it out. I'm thinking of using staticjinja, as I'm already familiar with jinja. It'll put out the html. Then I'll create a quick script to build the static site using jinja, putting everything together, and then deploy a test server. I'm thinking of using this for the webapp too, as it basically pushes out a template html file for each page, and then the javascript at the client-end will immediately fill it in with an initial call to the backend REST api. I can cache the hell out of it, and make it highly optimized. Then I'll just quickly write the js scripts using webpack. A script will then build the javascript, and then build the html. I shouldn't have to build the css, but if I do I'll just the script again. The server will then deploy. The reason why I'm using python and javascript together and not just javascript is because javascript's templating engines, and javascript's static site generators go for different things, and it'll be the same process anyways. I'm more familiar with python and jinja. ... Carbon Design System is integrated heavily with javascript. I'm moving templating engine to javascript.","title":"Landing html"},{"location":"stories/stories/other/landing_html/#html-generation","text":"Okay, so because this is the first implementation, I have to figure it out. I'm thinking of using staticjinja, as I'm already familiar with jinja. It'll put out the html. Then I'll create a quick script to build the static site using jinja, putting everything together, and then deploy a test server. I'm thinking of using this for the webapp too, as it basically pushes out a template html file for each page, and then the javascript at the client-end will immediately fill it in with an initial call to the backend REST api. I can cache the hell out of it, and make it highly optimized. Then I'll just quickly write the js scripts using webpack. A script will then build the javascript, and then build the html. I shouldn't have to build the css, but if I do I'll just the script again. The server will then deploy. The reason why I'm using python and javascript together and not just javascript is because javascript's templating engines, and javascript's static site generators go for different things, and it'll be the same process anyways. I'm more familiar with python and jinja. ... Carbon Design System is integrated heavily with javascript. I'm moving templating engine to javascript.","title":"HTML generation"},{"location":"stories/stories/other/landing_keywords/","text":"Keyword List for SEO Audience: Self-directed Learners Intent Information Intent: information on a specific topic Navigational Intent: access a specific website by entering the term in a search engine Commercial Intent: to buy something sometime soon and are doing research before making a purchase 'buy' becomes 'freely use' in my case, it's still applicable Transactional Intent: to buy something after doing commercial intent searches again, replace 'buy' with 'freely use' What this business is about Self-directed learning Self-learning... (List of possibilities, with focuses indicated STEM Math : a bit hard to accomodate, but can be made to work Physics Chemistry Psychology : a good choice because it's a popular point of pursuit and self-education Biology Computer science: a lot of people self-learn this as well the subject of 'programming' more specifically Humanities Sociology Philosophy: another popular subject to self study, that can merge well with monalect Literature History Language Monalect isn't too suited for languages, but it should be. I think the market however is too saturated there. I'd benefit more from focusing on the other less-exploited subjects. Still a valuable learning resource, and inspiration. Self-studying Learning (very general) Studying (very general) Learning Management System Topic buckets self education (1.3K) self learning (880) self study (880) learning tools (1.3K) courses (9.9K) how to study (9.9k) learning (49.5k) studying (14.8k) textbook (12.1k) autodidacticism (720) autodidact (22.2k) self taught (2.4k) self teaching (480) my course (390) SEO keywords self education (1.3K) self education tools self education guide self learning (880) self learning tools self learning guides self study (880) how to self study self study methods self study app self study learning tools (1.3K) courses (9.9K) free online courses free programming courses (online)(canada) free math courses (online)(canada) free psychology courses (online) (canada) free philosophy courses (online) (canada) free courses online study (49.5k) how to study effectively learning (49.5k) learn (60.5k) how to learn python how to learn sql learn math math education studying (14.8k) textbook (12.1k) read textbook free textbook autodidacticism (720) autodidact (22.2k) self taught (2.4k) self teaching (480) course my course (390) course management system course management software Nouns: + MIT OpenCourseWare + Library Genesis + Open Textbook Library +","title":"Landing keywords"},{"location":"stories/stories/other/landing_keywords/#keyword-list-for-seo","text":"Audience: Self-directed Learners","title":"Keyword List for SEO"},{"location":"stories/stories/other/landing_keywords/#intent","text":"Information Intent: information on a specific topic Navigational Intent: access a specific website by entering the term in a search engine Commercial Intent: to buy something sometime soon and are doing research before making a purchase 'buy' becomes 'freely use' in my case, it's still applicable Transactional Intent: to buy something after doing commercial intent searches again, replace 'buy' with 'freely use'","title":"Intent"},{"location":"stories/stories/other/landing_keywords/#what-this-business-is-about","text":"Self-directed learning Self-learning... (List of possibilities, with focuses indicated STEM Math : a bit hard to accomodate, but can be made to work Physics Chemistry Psychology : a good choice because it's a popular point of pursuit and self-education Biology Computer science: a lot of people self-learn this as well the subject of 'programming' more specifically Humanities Sociology Philosophy: another popular subject to self study, that can merge well with monalect Literature History Language Monalect isn't too suited for languages, but it should be. I think the market however is too saturated there. I'd benefit more from focusing on the other less-exploited subjects. Still a valuable learning resource, and inspiration. Self-studying Learning (very general) Studying (very general) Learning Management System","title":"What this business is about"},{"location":"stories/stories/other/landing_keywords/#topic-buckets","text":"self education (1.3K) self learning (880) self study (880) learning tools (1.3K) courses (9.9K) how to study (9.9k) learning (49.5k) studying (14.8k) textbook (12.1k) autodidacticism (720) autodidact (22.2k) self taught (2.4k) self teaching (480) my course (390)","title":"Topic buckets"},{"location":"stories/stories/other/landing_keywords/#seo-keywords","text":"self education (1.3K) self education tools self education guide self learning (880) self learning tools self learning guides self study (880) how to self study self study methods self study app self study learning tools (1.3K) courses (9.9K) free online courses free programming courses (online)(canada) free math courses (online)(canada) free psychology courses (online) (canada) free philosophy courses (online) (canada) free courses online study (49.5k) how to study effectively learning (49.5k) learn (60.5k) how to learn python how to learn sql learn math math education studying (14.8k) textbook (12.1k) read textbook free textbook autodidacticism (720) autodidact (22.2k) self taught (2.4k) self teaching (480) course my course (390) course management system course management software Nouns: + MIT OpenCourseWare + Library Genesis + Open Textbook Library +","title":"SEO keywords"},{"location":"stories/stories/other/landing_team/","text":"The Social Aspect","title":"Landing team"},{"location":"stories/stories/other/landing_team/#the-social-aspect","text":"","title":"The Social Aspect"}]}